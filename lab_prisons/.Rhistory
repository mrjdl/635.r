library(tmap)
library(sf)
library(tigris)
library(readr)
#Get Spatial Data for California Counties
#this is the county shapefiles
options(tigris_class = "sf")
ca_counties_spatial <- counties(state = "CA", cb = TRUE) # cb = TRUE for a cartographic boundary (simpler shapes)
prison_data <- read_csv("prison.csv")
# View the first few rows of the data frame
head(prison_data)
# Assuming your data is in an R dataframe called prison_data, and you're merging by county name
# Ensure the county names match exactly between datasets, adjusting as necessary
merged_data <- merge(ca_counties_spatial, prison_data, by.x = "NAME", by.y = "California counties")
##map
tmap_mode("view")
tm_shape(merged_data) +
tm_polygons("Imprisonment rate per 100,000", title = "Imprisonment Rate") +
tm_layout(main.title = "Imprisonment Rate per 100,000 Population in California Counties (2020)",
main.title.position = "center",
legend.position = c("left", "bottom"))
#libraries
library(tidycensus)
library(tidyverse)
library(tmap)
library(mapview)
library(tigris)
library(viridis)
#install Census API:
# https://api.census.gov/data/key_signup.html
census_api_key("bfff7060ecfc2d4ad3de6c303c949e4f22c3255b", install=T, overwrite = T)
#use "view" for interactive plot; "plot" for static map
tmap_mode("view")
# Los Angeles
#retrieve race information from Census
md_race = get_decennial(
geography = "county",
state = "CA",
county = "Los Angeles",
variables = c(
Latino = "P2_002N",
White = "P2_005N",
Black = "P2_006N",
Asian = "P2_008N"
),
year = 2020,
geometry = TRUE
)
# convert to scattered dots for plotting
md_dots = as_dot_density(
md_race,
value = "value",
values_per_dot = 2000,
group = "variable"
)
background_tracts = filter(md_race, variable == "White")
# dot density plot
tm_shape(background_tracts) +
tm_polygons(col = "white",
border.col = "grey") +
tm_shape(md_dots) +
tm_dots(col = "variable",
palette = "viridis",
size = 0.025,
title = "1 dot = 2,000 people") +
tm_layout(legend.outside = TRUE,
title = "Race/ethnicity,\n2020 US Census", scale = 1.5)
